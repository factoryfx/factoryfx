import java.nio.charset.StandardCharsets

buildscript {
    repositories {
        mavenCentral()
    }
}
plugins {
    id "com.github.spotbugs" version "6.0.26"
    id "com.github.ben-manes.versions" version "0.51.0"
    id "com.gradleup.nmcp.aggregation" version "1.0.1"
    id "org.openjfx.javafxplugin" version "0.1.0" apply false
}

wrapper {
    gradleVersion = '8.14.2'
    distributionType = Wrapper.DistributionType.ALL
}

apply plugin: 'maven-publish'
nmcpAggregation {
    centralPortal {
        username = System.getenv('SONATYPE_USER')
        password = System.getenv('SONATYPE_PASSWORD')
        publishingType = "AUTOMATIC"
    }
    publishAllProjectsProbablyBreakingProjectIsolation()
}

subprojects {
    apply plugin: "com.github.spotbugs"
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    java {
        sourceCompatibility = JavaVersion.VERSION_17
    }

    if (!'benchmark'.equals(project.name)) {//jmh does not work with module-info
        compileJava {

            inputs.property("moduleName", "io.github.factoryfx.$project.name")
            doFirst {
                options.compilerArgs = ['--module-path', classpath.asPath]
                classpath = files()
            }
        }
    }

    tasks.register('javadocJar', Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }
    javadoc {
        failOnError = false
        doFirst {
            options.modulePath = new ArrayList<>(classpath.files)
            options.encoding = StandardCharsets.UTF_8
            ((CoreJavadocOptions) options).addStringOption('Xdoclint:none', '-quiet')
        }
    }

    tasks.register('sourcesJar', Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    group = 'io.github.factoryfx'
    version = '4.0.12'

    publishing {

        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = 'factoryfx'
                    packaging = 'jar'
                    description = 'factoryfx dependency injection framework'
                    url = 'http://factoryfx.github.io/factoryfx'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'SCOOP Software'
                            name = 'SCOOP Software'
                        }
                    }
                    scm {
                        connection = 'scm:git@github.com:factoryfx/factoryfx.git'
                        developerConnection = 'scm:git@github.com:factoryfx/factoryfx.git'
                        url = 'scm:git@github.com:factoryfx/factoryfx.git'
                    }
                }
            }
        }
    }

    if (System.getenv('SECRING') != null) {
        signing {
            def signingKey = System.getenv("SECRING")
            def signingPassword = System.getenv("SECRING_PASS")
            useInMemoryPgpKeys(signingKey, signingPassword)
            sign publishing.publications.mavenJava
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        api group: 'org.slf4j', name: 'slf4j-api', version: '2.0.16'
        api(group: 'com.google.guava', name: 'guava', version: '33.4.8-jre')

        testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.14.2'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.11.3'
    }

    test {
        useJUnitPlatform()
    }

    spotbugs {
        toolVersion = '4.8.6'
        ignoreFailures = true
        excludeFilter = file("$rootProject.projectDir/findbugs/findbugs-exclude-filter.xml")
    }

    spotbugsTest {
        enabled = false
    }

}

project(':copperBridge') {
    dependencies {
        api project(":factory")
        api(group: 'org.copper-engine', name: 'copper-coreengine', version: '5.5.2')
        api(group: 'org.copper-engine', name: 'copper-ext', version: '5.5.2')

        api group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.3'
        api group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'

        api group: 'org.ow2.asm', name: 'asm', version: '9.7.1'
        api group: 'org.ow2.asm', name: 'asm-tree', version: '9.7.1'
        api group: 'org.yaml', name: 'snakeyaml', version: '2.3'
    }
}

project(':microserviceRestResource') {
    dependencies {
        api project(":jettyFactory")
        api project(":microserviceRestCommon")
        testImplementation project(":testfactories")
    }
}

project(':microserviceRestClient') {
    dependencies {
        api project(":factory")
        api project(":microserviceRestCommon")
        api(group: 'org.glassfish.jersey.ext', name: 'jersey-proxy-client', version: '3.1.9')
        api('org.glassfish.jersey.core:jersey-client:3.1.9')
        api group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '3.1.9'
        api group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '3.1.9'
    }

}

project(':microserviceRestCommon') {
    dependencies {
        api project(":factory")
        api group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api', version: '4.0.0'
        api group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.3'
        api group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'
    }
}

project(':microserviceRestIntegrationTest') {
//    publishMavenJavaPublicationToMavenRepository.enabled = false//don't publish
    dependencies {
        implementation project(":microserviceRestResource")
        implementation project(":microserviceRestClient")
        implementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
        implementation group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.3'
    }
}


project(':factory') {
    dependencies {
        api(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.1')
        api(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.18.1')
        api(group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.18.1')
        api group: 'com.fasterxml.jackson.jakarta.rs', name: 'jackson-jakarta-rs-json-provider', version: '2.18.1'
        testImplementation project(":testfactories")
        testImplementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
        testImplementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.18.1'
    }
}

project(':postgresqlStorage') {

    dependencies {
        api project(":factory")
        api group: 'org.postgresql', name: 'postgresql', version: '42.7.4'
        testImplementation 'io.zonky.test:embedded-postgres:2.0.7'
        testImplementation project(":testfactories")
    }

}

project(':oracledbStorage') {
    dependencies {
        implementation project(":factory")
        implementation(group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: "23.5.0.24.07")
        testImplementation group: 'com.h2database', name: 'h2', version: '2.3.232'
        testImplementation project(":testfactories")
    }

}

project(':jettyFactory') {
    dependencies {
        api project(":factory")
        api(group: 'org.eclipse.jetty', name: 'jetty-server', version: '12.0.14')
        api(group: 'org.eclipse.jetty', name: 'jetty-alpn-java-server', version: '12.0.14')
        implementation(group: 'org.eclipse.jetty.ee10', name: 'jetty-ee10-servlet', version: '12.0.14')
        implementation(group: 'org.eclipse.jetty.ee10', name: 'jetty-ee10-webapp', version: '12.0.14')
        implementation(group: 'org.eclipse.jetty.http2', name: 'jetty-http2-server', version: '12.0.14')

        api group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'

        api group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '3.1.9'
        api(group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '3.1.9')
        api group: 'com.fasterxml.jackson.jakarta.rs', name: 'jackson-jakarta-rs-json-provider', version: '2.18.1'
        api('org.glassfish.jersey.containers:jersey-container-servlet-core:3.1.9')
        api('org.glassfish.jersey.inject:jersey-hk2:3.1.9')

        api group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '3.0.0'
        api group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: '3.1.9'

        api group: "org.ini4j", name: "ini4j", version: "0.5.4"

        testImplementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
    }

}


project(':example') {
    apply plugin: 'org.openjfx.javafxplugin'
    javafx {
        version = "17.0.15"
        modules = ['javafx.controls', 'javafx.web', 'javafx.graphics', 'javafx.fxml', 'javafx.media']
        configuration = 'api'
    }
//    publishMavenJavaPublicationToMavenRepository.enabled = false//don't publish
    dependencies {
        implementation project(":javafxFactoryEditing")
        implementation project(":jettyFactory")
        implementation project(":microserviceRestResource")
        implementation project(":factory")
        implementation project(":domFactoryEditing")

        implementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
        implementation group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.3'
    }

}


project(':javafxFactoryEditing') {
    apply plugin: 'org.openjfx.javafxplugin'
    javafx {
        version = "17.0.15"
        modules = ['javafx.controls', 'javafx.web', 'javafx.graphics', 'javafx.fxml', 'javafx.media']
        configuration = 'api'
    }
    dependencies {

        api group: 'org.controlsfx', name: 'controlsfx', version: '11.2.1'
        api group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.11.3'

        api project(":factory")
        api project(":microserviceRestClient")

        testImplementation project(":testfactories")
        testImplementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
        testImplementation group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.3'

    }

}

project(':javafxDistributionServer') {
    dependencies {
        api project(":jettyFactory")
        api project(":factory")
        api group: 'org.slf4j', name: 'slf4j-api', version: '2.0.16'

        testImplementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
        testImplementation group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.3'
    }

}

project(':javafxDistributionClient') {
    apply plugin: 'org.openjfx.javafxplugin'
    javafx {
        version = "17.0.15"
        modules = ['javafx.controls', 'javafx.web', 'javafx.graphics', 'javafx.fxml', 'javafx.media']
        configuration = 'api'
    }

    dependencies {
        api group: 'org.slf4j', name: 'slf4j-api', version: '2.0.16'
        api(group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.18.1') {
            exclude group: "javax.annotation"
        }

        api group: 'org.glassfish.jersey.core', name: 'jersey-common', version: '3.1.9'
        api(group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '3.1.9')
        api group: 'com.fasterxml.jackson.jakarta.rs', name: 'jackson-jakarta-rs-json-provider', version: '2.18.1'
        api('org.glassfish.jersey.media:jersey-media-json-jackson:3.1.9')
        api('org.glassfish.jersey.inject:jersey-hk2:3.1.9')
        api(group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2')
    }

}

project(':testfactories') {
//    publishMavenJavaPublicationToMavenRepository.enabled = false//don't publish
    dependencies {
        implementation project(":factory")
    }
}

project(':docu') {
//    publishMavenJavaPublicationToMavenRepository.enabled = false//don't publish
    dependencies {
        implementation project(":factory")
        implementation project(":jettyFactory")
        implementation project(':postgresqlStorage')

        implementation project(':microserviceRestResource')
        implementation project(':microserviceRestClient')
        implementation project(':initializr')
        implementation project(":domFactoryEditing")

        implementation group: 'io.dropwizard.metrics', name: 'metrics-jetty12', version: '4.2.28'
        implementation 'io.zonky.test:embedded-postgres:2.0.7'
        implementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
        implementation group: 'jakarta.activation', name: 'jakarta.activation-api', version: '2.1.3'

        implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'
    }

}

project(':typescriptGenerator') {
    dependencies {
        api project(":factory")
        testImplementation project(":testfactories")
        testImplementation project(":jettyFactory")
        testImplementation project(":domFactoryEditing")
        testImplementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
    }

    tasks.register('generateTestCode', JavaExec) {
        classpath = sourceSets.test.runtimeClasspath
        mainClass = 'io.github.factoryfx.factory.typescript.generator.data.TestGenerator'
    }

    tasks.register('installNpm', Exec) {
        dependsOn ':typescriptGenerator:generateTestCode'
        workingDir "$projectDir/src/test/ts/"

        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            commandLine "npm.cmd", "install"
        } else {
            commandLine "npm", "install"
        }
    }

    tasks.register('typescriptTest', Exec) {
        dependsOn ':typescriptGenerator:installNpm'
        workingDir "$projectDir/src/test/ts/"

        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            commandLine "npm.cmd", "test"
        } else {
            commandLine "npm", "test"
        }
    }
}

project(':soapFactory') {

    repositories {
        mavenCentral()
    }

    dependencies {

        api project(":factory")
        api project(":jettyFactory")

        api(group: 'org.eclipse.jetty', name: 'jetty-server', version: '11.0.24') {
            exclude group: "javax.annotation"
        }
        api group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'
        api(group: 'com.sun.istack', name: 'istack-commons-runtime', version: '4.2.0') {
            exclude group: 'javax.annotation'
        }

        api group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '4.0.5'

        api(group: 'com.sun.xml.messaging.saaj', name: 'saaj-impl', version: '3.0.4')

        api group: 'jakarta.xml.ws', name: 'jakarta.xml.ws-api', version: '4.0.2'
        api group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '3.0.0'
        api group: 'jakarta.xml.soap', name: 'jakarta.xml.soap-api', version: '3.0.2'
        api group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.1.0'
    }
}


project(':initializr') {

    dependencies {
        api project(":factory")
        api project(":jettyFactory")
        api group: 'com.squareup', name: 'javapoet', version: '1.13.0'
    }
}

project(':benchmark') {
//    publishMavenJavaPublicationToMavenRepository.enabled = false//don't publish
    dependencies {
        implementation project(":factory")
        implementation project(":testfactories")

        implementation group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: '1.37'
        implementation group: 'org.openjdk.jmh', name: 'jmh-core', version: '1.37'
    }
}

project(':domFactoryEditing') {
    dependencies {
        api project(":microserviceRestResource")
        api project(":typescriptGenerator")
        testImplementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.12')
    }
}
